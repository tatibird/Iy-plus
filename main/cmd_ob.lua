do local FlatIdent_60E04=0;local StrToNumber;local Byte;local Char;local Sub;local Subg;local Rep;local Concat;local Insert;local GetFEnv;local Setmetatable;local PCall;local Select;local Unpack;local ToNumber;local VMCall;while true do if (FlatIdent_60E04==5) then VMCall=function(ByteString,vmenv,...)local DIP=1;local repeatNext;ByteString=Subg(Sub(ByteString,5),"..",function(byte)if (Byte(byte,2)==79) then repeatNext=StrToNumber(Sub(byte,1,1));return "";else local FlatIdent_1F09C=0;local a;while true do if (FlatIdent_1F09C==0) then a=Char(StrToNumber(byte,16));if repeatNext then local b=Rep(a,repeatNext);repeatNext=nil;return b;else return a;end break;end end end end);local function gBit(Bit,Start,End)if End then local Res=(Bit/(2^(Start-1)))%(2^(((End-1) -(Start-1)) + 1));return Res-(Res%1);else local Plc=2^(Start-1);return (((Bit%(Plc + Plc))>=Plc) and 1) or 0;end end local function gBits8()local a=Byte(ByteString,DIP,DIP);DIP=DIP + 1;return a;end local function gBits16()local FlatIdent_17AEF=0;local a;local b;while true do if (FlatIdent_17AEF==0) then a,b=Byte(ByteString,DIP,DIP + 2);DIP=DIP + 2;FlatIdent_17AEF=1;end if (FlatIdent_17AEF==1) then return (b * 256) + a;end end end local function gBits32()local a,b,c,d=Byte(ByteString,DIP,DIP + 3);DIP=DIP + 4;return (d * 16777216) + (c * 65536) + (b * 256) + a;end local function gFloat()local FlatIdent_62F31=0;local l;local r;while true do if (FlatIdent_62F31==0) then l=gBits32();r=gBits32();FlatIdent_62F31=1;end if (FlatIdent_62F31==1) then return (( -2 * gBit(r,32)) + 1) * (2^(gBit(r,21,31) -1023)) * ((((gBit(r,1,20) * (2^32)) + l)/(2^52)) + 1);end end end local function gString(Len)local FlatIdent_6249E=0;local Str;local FStr;while true do if (FlatIdent_6249E==0) then Str=nil;if  not Len then local FlatIdent_3A1DD=0;while true do if (FlatIdent_3A1DD==0) then Len=gBits32();if (Len==0) then return "";end break;end end end FlatIdent_6249E=1;end if (FlatIdent_6249E==1) then Str=Sub(ByteString,DIP,(DIP + Len) -1);DIP=DIP + Len;FlatIdent_6249E=2;end if (FlatIdent_6249E==2) then FStr={};for Idx=1, #Str do FStr[Idx]=Char(Byte(Sub(Str,Idx,Idx)));end FlatIdent_6249E=3;end if (FlatIdent_6249E==3) then return Concat(FStr);end end end local gInt=gBits32;local function _R(...)return {...},Select("#",...);end local function Deserialize()local FlatIdent_558DD=0;local Instrs;local Functions;local Lines;local Chunk;local ConstCount;local Consts;while true do if (FlatIdent_558DD==2) then for Idx=1,ConstCount do local Type=gBits8();local Cons;if (Type==1) then Cons=gBits8()~=0;elseif (Type==2) then Cons=gFloat();elseif (Type==3) then Cons=gString();end Consts[Idx]=Cons;end Chunk[3]=gBits8();for Idx=1,gBits32() do local Descriptor=gBits8();if (gBit(Descriptor,1,1)==0) then local Type=gBit(Descriptor,2,3);local Mask=gBit(Descriptor,4,6);local Inst={gBits16(),gBits16(),nil,nil};if (Type==0) then local FlatIdent_229F4=0;while true do if (FlatIdent_229F4==0) then Inst[3]=gBits16();Inst[4]=gBits16();break;end end elseif (Type==1) then Inst[3]=gBits32();elseif (Type==2) then Inst[3]=gBits32() -(2^16);elseif (Type==3) then Inst[3]=gBits32() -(2^16);Inst[4]=gBits16();end if (gBit(Mask,1,1)==1) then Inst[2]=Consts[Inst[2]];end if (gBit(Mask,2,2)==1) then Inst[3]=Consts[Inst[3]];end if (gBit(Mask,3,3)==1) then Inst[4]=Consts[Inst[4]];end Instrs[Idx]=Inst;end end FlatIdent_558DD=3;end if (FlatIdent_558DD==0) then Instrs={};Functions={};Lines={};FlatIdent_558DD=1;end if (FlatIdent_558DD==1) then Chunk={Instrs,Functions,nil,Lines};ConstCount=gBits32();Consts={};FlatIdent_558DD=2;end if (FlatIdent_558DD==3) then for Idx=1,gBits32() do Functions[Idx-1]=Deserialize();end for Idx=1,gBits32() do Lines[Idx]=gBits32();end return Chunk;end end end local function Wrap(Chunk,Upvalues,Env)local FlatIdent_42091=0;local Instr;local Proto;local Params;while true do if (1==FlatIdent_42091) then Params=Chunk[3];return function(...)local FlatIdent_515CE=0;local VIP;local Top;local Args;local PCount;local Loop;while true do if (FlatIdent_515CE==1) then Args={...};PCount=Select("#",...) -1;FlatIdent_515CE=2;end if (FlatIdent_515CE==2) then Loop=nil;Loop=function()local Instr=Instr;local Proto=Proto;local Params=Params;local _R=_R;local Vararg={};local Lupvals={};local Stk={};for Idx=0,PCount do if ((644<=2265) and (Idx>=Params)) then Vararg[Idx-Params]=Args[Idx + 1];else Stk[Idx]=Args[Idx + 1];end end local Varargsz=(PCount-Params) + 1;local Inst;local Enum;while true do local FlatIdent_4D951=0;local FlatIdent_84B0C;while true do if ((1958>271) and (FlatIdent_4D951==0)) then FlatIdent_84B0C=0;while true do if ((759<1312) and (0==FlatIdent_84B0C)) then Inst=Instr[VIP];Enum=Inst[1];FlatIdent_84B0C=1;end if ((2115>295) and (FlatIdent_84B0C==1)) then if ((Enum<=25) or (2436<=79)) then if ((1679<3584) and (Enum<=12)) then if ((Enum<=5) or (3448<=3378)) then if ((Enum<=2) or (324>=2060)) then if ((Enum<=0) or (3871>=4618)) then local FlatIdent_847C8=0;local FlatIdent_790EB;local FlatIdent_BE87;local B;while true do if ((1709<3428) and (0==FlatIdent_847C8)) then FlatIdent_790EB=0;FlatIdent_BE87=nil;FlatIdent_847C8=1;end if ((4323>1129) and (FlatIdent_847C8==1)) then B=nil;while true do if ((118<1823) and (FlatIdent_790EB==1)) then while true do if ((FlatIdent_BE87==0) or (788<204)) then B=Stk[Inst[4]];if ( not B or (3068==3919)) then VIP=VIP + 1;else local FlatIdent_95A46=0;local FlatIdent_4B336;while true do if ((FlatIdent_95A46==0) or (3627<=2853)) then FlatIdent_4B336=0;while true do if ((FlatIdent_4B336==0) or (3834==3517)) then Stk[Inst[2]]=B;VIP=Inst[3];break;end end break;end end end break;end end break;end if ((3658>=2326) and (FlatIdent_790EB==0)) then FlatIdent_BE87=0;B=nil;FlatIdent_790EB=1;end end break;end end elseif ((4383>1903) and (Enum==1)) then Stk[Inst[2]]=Stk[Inst[3]] -Stk[Inst[4]];else local FlatIdent_8CD10=0;local FlatIdent_75C0C;local A;local T;while true do if ((751==751) and (1==FlatIdent_8CD10)) then T=nil;while true do if ((FlatIdent_75C0C==0) or (3289==1766)) then local FlatIdent_81F64=0;local FlatIdent_9169B;while true do if ((2586>1907) and (FlatIdent_81F64==0)) then FlatIdent_9169B=0;while true do if ((FlatIdent_9169B==0) or (3030==407)) then local FlatIdent_82269=0;while true do if ((4568>=35) and (0==FlatIdent_82269)) then A=Inst[2];T=Stk[A];FlatIdent_82269=1;end if ((FlatIdent_82269==1) or (649>3245)) then FlatIdent_9169B=1;break;end end end if ((4721>=3917) and (FlatIdent_9169B==1)) then FlatIdent_75C0C=1;break;end end break;end end end if ((FlatIdent_75C0C==1) or (2582>=4088)) then for Idx=A + 1,Top do Insert(T,Stk[Idx]);end break;end end break;end if ((3728>=2191) and (FlatIdent_8CD10==0)) then FlatIdent_75C0C=0;A=nil;FlatIdent_8CD10=1;end end end elseif ((Enum<=3) or (3580<869)) then local FlatIdent_23082=0;local FlatIdent_7C8A4;local A;local Results;local Edx;while true do if ((1==FlatIdent_23082) or (4828<2670)) then Results=nil;Edx=nil;FlatIdent_23082=2;end if ((3034>432) and (FlatIdent_23082==0)) then FlatIdent_7C8A4=0;A=nil;FlatIdent_23082=1;end if ((FlatIdent_23082==2) or (3645>4786)) then while true do if ((FlatIdent_7C8A4==1) or (1949<1790)) then Edx=0;for Idx=A,Inst[4] do local FlatIdent_2ED13=0;local FlatIdent_93612;while true do if ((FlatIdent_2ED13==0) or (1952>2578)) then FlatIdent_93612=0;while true do if ((1298<4704) and (FlatIdent_93612==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end end break;end if ((0==FlatIdent_7C8A4) or (3899<=285)) then A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1,Top))};FlatIdent_7C8A4=1;end end break;end end elseif ((Enum==4) or (3039<=1922)) then Stk[Inst[2]]=Inst[3]~=0;else local FlatIdent_6BA40=0;local A;local Cls;while true do if ((FlatIdent_6BA40==1) or (3605>4983)) then for Idx=1, #Lupvals do local FlatIdent_48D95=0;local FlatIdent_716CF;local List;while true do if ((FlatIdent_48D95==0) or (3974==3305)) then FlatIdent_716CF=0;List=nil;FlatIdent_48D95=1;end if ((172<=4254) and (FlatIdent_48D95==1)) then while true do if ((195<=1068) and (FlatIdent_716CF==0)) then List=Lupvals[Idx];for Idz=0, #List do local FlatIdent_20773=0;local FlatIdent_64ABC;local Upv;local NStk;local DIP;while true do if ((663<=847) and (FlatIdent_20773==1)) then local FlatIdent_6CD6F=0;while true do if ((0==FlatIdent_6CD6F) or (1376==3671)) then NStk=nil;DIP=nil;FlatIdent_6CD6F=1;end if ((4339>=1472) and (FlatIdent_6CD6F==1)) then FlatIdent_20773=2;break;end end end if ((1523<3312) and (FlatIdent_20773==0)) then local FlatIdent_5B0BA=0;while true do if ((4131>=252) and (FlatIdent_5B0BA==1)) then FlatIdent_20773=1;break;end if ((FlatIdent_5B0BA==0) or (2040>4082)) then FlatIdent_64ABC=0;Upv=nil;FlatIdent_5B0BA=1;end end end if ((75<=4776) and (2==FlatIdent_20773)) then while true do if ((4118>=3904) and (FlatIdent_64ABC==1)) then DIP=Upv[2];if ((1222>165) and (NStk==Stk) and (DIP>=A)) then local FlatIdent_38014=0;local FlatIdent_6D732;while true do if ((FlatIdent_38014==0) or (2900==2378)) then FlatIdent_6D732=0;while true do if ((FlatIdent_6D732==0) or (3526<=2818)) then Cls[DIP]=NStk[DIP];Upv[1]=Cls;break;end end break;end end end break;end if ((4085<=4589) and (FlatIdent_64ABC==0)) then local FlatIdent_776DF=0;local FlatIdent_400B3;while true do if ((FlatIdent_776DF==0) or (3173>4461)) then FlatIdent_400B3=0;while true do if ((362==362) and (FlatIdent_400B3==1)) then FlatIdent_64ABC=1;break;end if ((0==FlatIdent_400B3) or (1956>1971)) then local FlatIdent_9403B=0;while true do if ((FlatIdent_9403B==1) or (1356<6)) then FlatIdent_400B3=1;break;end if ((FlatIdent_9403B==0) or (4865<=3089)) then Upv=List[Idz];NStk=Upv[1];FlatIdent_9403B=1;end end end end break;end end end end break;end end end break;end end break;end end end break;end if ((2677<=3217) and (0==FlatIdent_6BA40)) then A=Inst[2];Cls={};FlatIdent_6BA40=1;end end end elseif ((2445>=2341) and (Enum<=8)) then if ((Enum<=6) or (1265==1287)) then Stk[Inst[2]]={};elseif ((3639<=4808) and (Enum==7)) then local FlatIdent_1B1AA=0;local A;while true do if ((2653==2653) and (FlatIdent_1B1AA==0)) then A=Inst[2];Stk[A](Unpack(Stk,A + 1,Top));break;end end else do return Stk[Inst[2]];end end elseif ((Enum<=10) or (763>=4087)) then if ((Enum==9) or (3995<=3647)) then Stk[Inst[2]]=Inst[3];else Stk[Inst[2]]=Inst[3] * Stk[Inst[4]];end elseif ((211<3554) and (Enum==11)) then Stk[Inst[2]]();else local FlatIdent_26ACE=0;local FlatIdent_7210B;local A;while true do if ((FlatIdent_26ACE==1) or (1783==2214)) then while true do if ((3054>=2682) and (FlatIdent_7210B==0)) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1,Inst[3]));break;end end break;end if ((0==FlatIdent_26ACE) or (1527>3445)) then FlatIdent_7210B=0;A=nil;FlatIdent_26ACE=1;end end end elseif ((91<=3104) and (Enum<=18)) then if ((Enum<=15) or (3122<1241)) then if ((4983>=3826) and (Enum<=13)) then Stk[Inst[2]]=Upvalues[Inst[3]];elseif ((Enum==14) or (108>=1992)) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];else local FlatIdent_525E1=0;local FlatIdent_6836F;local A;while true do if ((4059>2778) and (FlatIdent_525E1==1)) then while true do if ((1759==1759) and (FlatIdent_6836F==0)) then A=Inst[2];Stk[A](Stk[A + 1]);break;end end break;end if ((FlatIdent_525E1==0) or (4705==1757)) then local FlatIdent_6C3E2=0;while true do if ((2257<4136) and (FlatIdent_6C3E2==1)) then FlatIdent_525E1=1;break;end if ((FlatIdent_6C3E2==0) or (1576<817)) then FlatIdent_6836F=0;A=nil;FlatIdent_6C3E2=1;end end end end end elseif ((3574==3574) and (Enum<=16)) then local FlatIdent_420F5=0;local FlatIdent_4D206;local A;while true do if ((31<=3797) and (0==FlatIdent_420F5)) then FlatIdent_4D206=0;A=nil;FlatIdent_420F5=1;end if ((FlatIdent_420F5==1) or (3243>4114)) then while true do if ((FlatIdent_4D206==0) or (1564>=4718)) then A=Inst[2];Stk[A]=Stk[A]();break;end end break;end end elseif ((1287>=549) and (Enum>17)) then Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]];else for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end end elseif ((92<=107) and (Enum<=21)) then if ((1821==1821) and (Enum<=19)) then Env[Inst[3]]=Stk[Inst[2]];elseif ((2640>1795) and (Enum>20)) then local FlatIdent_45657=0;local A;local Results;local Limit;local Edx;while true do if ((FlatIdent_45657==0) or (3608==637)) then A=Inst[2];Results,Limit=_R(Stk[A](Stk[A + 1]));FlatIdent_45657=1;end if ((4610>=3345) and (FlatIdent_45657==2)) then for Idx=A,Top do local FlatIdent_33469=0;local FlatIdent_297ED;while true do if ((0==FlatIdent_33469) or (2264==799)) then FlatIdent_297ED=0;while true do if ((2054==2054) and (FlatIdent_297ED==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end end break;end if ((4636>=874) and (FlatIdent_45657==1)) then local FlatIdent_2E8E6=0;while true do if ((0==FlatIdent_2E8E6) or (3349>=3853)) then Top=(Limit + A) -1;Edx=0;FlatIdent_2E8E6=1;end if ((FlatIdent_2E8E6==1) or (4594==2127)) then FlatIdent_45657=2;break;end end end end else local FlatIdent_856A0=0;local FlatIdent_6E2E0;local A;local B;while true do if ((1837<=3652) and (FlatIdent_856A0==1)) then B=nil;while true do if ((1==FlatIdent_6E2E0) or (4035==3759)) then Stk[A + 1]=B;Stk[A]=B[Inst[4]];break;end if ((FlatIdent_6E2E0==0) or (1317==975)) then A=Inst[2];B=Stk[Inst[3]];FlatIdent_6E2E0=1;end end break;end if ((FlatIdent_856A0==0) or (1225>=3700)) then FlatIdent_6E2E0=0;A=nil;FlatIdent_856A0=1;end end end elseif ((2442==2442) and (Enum<=23)) then if ((Enum==22) or (2083>=4465)) then local FlatIdent_84583=0;local FlatIdent_67FF6;local B;while true do if ((FlatIdent_84583==1) or (2381>=4069)) then while true do if ((FlatIdent_67FF6==0) or (3971>4887)) then B=Stk[Inst[4]];if ((3251>=425) and B) then VIP=VIP + 1;else local FlatIdent_914F1=0;local FlatIdent_4E879;local FlatIdent_EDEF;while true do if ((2568<3868) and (FlatIdent_914F1==1)) then while true do if ((3692>1840) and (FlatIdent_4E879==0)) then FlatIdent_EDEF=0;while true do if ((4660>2659) and (FlatIdent_EDEF==0)) then Stk[Inst[2]]=B;VIP=Inst[3];break;end end break;end end break;end if ((1186<=4684) and (FlatIdent_914F1==0)) then FlatIdent_4E879=0;FlatIdent_EDEF=nil;FlatIdent_914F1=1;end end end break;end end break;end if ((3589==3589) and (FlatIdent_84583==0)) then FlatIdent_67FF6=0;B=nil;FlatIdent_84583=1;end end else Stk[Inst[2]]=Env[Inst[3]];end elseif ((Enum==24) or (1971<1502)) then Stk[Inst[2]]=Wrap(Proto[Inst[3]],nil,Env);else Stk[Inst[2]][Inst[3]]=Inst[4];end elseif ((3705<=4439) and (Enum<=38)) then if ((Enum<=31) or (902>3332)) then if ((Enum<=28) or (3991<3216)) then if ((Enum<=26) or (607>1397)) then local FlatIdent_4272B=0;local A;local Index;local Step;while true do if ((2399>=119) and (0==FlatIdent_4272B)) then local FlatIdent_2D2B0=0;while true do if ((FlatIdent_2D2B0==1) or (484>=1745)) then FlatIdent_4272B=1;break;end if ((4278==4278) and (FlatIdent_2D2B0==0)) then A=Inst[2];Index=Stk[A];FlatIdent_2D2B0=1;end end end if ((940>=771) and (FlatIdent_4272B==1)) then Step=Stk[A + 2];if ((2906<3482) and (Step>0)) then if ((Index>Stk[A + 1]) or (1404>1832)) then VIP=Inst[3];else Stk[A + 3]=Index;end elseif ((3900==3900) and (Index<Stk[A + 1])) then VIP=Inst[3];else Stk[A + 3]=Index;end break;end end elseif ((1411<3593) and (Enum==27)) then local FlatIdent_954E5=0;local FlatIdent_26CB9;local A;while true do if ((FlatIdent_954E5==0) or (3464>=4746)) then FlatIdent_26CB9=0;A=nil;FlatIdent_954E5=1;end if ((FlatIdent_954E5==1) or (4680<903)) then while true do if ((FlatIdent_26CB9==0) or (3491==3935)) then A=Inst[2];do return Unpack(Stk,A,A + Inst[3]);end break;end end break;end end else Stk[Inst[2]]= #Stk[Inst[3]];end elseif ((Enum<=29) or (4911<=1631)) then local FlatIdent_93424=0;local FlatIdent_883B3;local A;while true do if ((4274>2916) and (FlatIdent_93424==0)) then FlatIdent_883B3=0;A=nil;FlatIdent_93424=1;end if ((608<=4003) and (FlatIdent_93424==1)) then while true do if ((4752==4752) and (FlatIdent_883B3==0)) then A=Inst[2];Stk[A]=Stk[A](Stk[A + 1]);break;end end break;end end elseif ((1570<1740) and (Enum>30)) then local FlatIdent_7671F=0;local FlatIdent_FD69;local FlatIdent_79583;local A;local Results;local Limit;local Edx;while true do if ((FlatIdent_7671F==0) or (4338==2515)) then FlatIdent_FD69=0;FlatIdent_79583=nil;FlatIdent_7671F=1;end if ((FlatIdent_7671F==2) or (2621==1689)) then Limit=nil;Edx=nil;FlatIdent_7671F=3;end if ((FlatIdent_7671F==3) or (2629>2983)) then while true do if ((FlatIdent_FD69==2) or (1359>=1821)) then Edx=nil;while true do if ((2677>=1172) and (FlatIdent_79583==2)) then for Idx=A,Top do local FlatIdent_47062=0;local FlatIdent_17472;local FlatIdent_684DD;while true do if ((FlatIdent_47062==0) or (30==706)) then FlatIdent_17472=0;FlatIdent_684DD=nil;FlatIdent_47062=1;end if ((1065<3246) and (FlatIdent_47062==1)) then while true do if ((3025>=2717) and (FlatIdent_17472==0)) then FlatIdent_684DD=0;while true do if ((2454>1038) and (FlatIdent_684DD==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end break;end end end break;end if ((4962>=576) and (FlatIdent_79583==0)) then local FlatIdent_10D57=0;local FlatIdent_72951;while true do if ((3711<4867) and (FlatIdent_10D57==0)) then FlatIdent_72951=0;while true do if ((4525==4525) and (FlatIdent_72951==0)) then local FlatIdent_7994E=0;while true do if ((FlatIdent_7994E==1) or (68>4501)) then FlatIdent_72951=1;break;end if ((0==FlatIdent_7994E) or (2369<=1640)) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1,Inst[3])));FlatIdent_7994E=1;end end end if ((FlatIdent_72951==1) or (879>4401)) then FlatIdent_79583=1;break;end end break;end end end if ((4656>=1135) and (FlatIdent_79583==1)) then local FlatIdent_22060=0;while true do if ((FlatIdent_22060==1) or (1307>=3884)) then FlatIdent_79583=2;break;end if ((1982<=3294) and (FlatIdent_22060==0)) then local FlatIdent_8369C=0;while true do if ((FlatIdent_8369C==1) or (1431<=569)) then FlatIdent_22060=1;break;end if ((FlatIdent_8369C==0) or (4203<87)) then Top=(Limit + A) -1;Edx=0;FlatIdent_8369C=1;end end end end end end break;end if ((FlatIdent_FD69==1) or (1045==801)) then local FlatIdent_86CE4=0;while true do if ((FlatIdent_86CE4==0) or (4314<1593)) then Results=nil;Limit=nil;FlatIdent_86CE4=1;end if ((FlatIdent_86CE4==1) or (2966>=3792)) then FlatIdent_FD69=2;break;end end end if ((FlatIdent_FD69==0) or (2040>4013)) then FlatIdent_79583=0;A=nil;FlatIdent_FD69=1;end end break;end if ((FlatIdent_7671F==1) or (2337<167)) then A=nil;Results=nil;FlatIdent_7671F=2;end end else Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];end elseif ((311==311) and (Enum<=34)) then if ((Enum<=32) or (1740==4343)) then if ( not Stk[Inst[2]] or (4151<3839)) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((Enum>33) or (2990==3695)) then local FlatIdent_18DB6=0;local A;local T;local B;while true do if ((FlatIdent_18DB6==0) or (4525<=1297)) then local FlatIdent_70F32=0;while true do if ((FlatIdent_70F32==0) or (4500<2192)) then A=Inst[2];T=Stk[A];FlatIdent_70F32=1;end if ((4020>3362) and (FlatIdent_70F32==1)) then FlatIdent_18DB6=1;break;end end end if ((277==277) and (FlatIdent_18DB6==1)) then B=Inst[3];for Idx=1,B do T[Idx]=Stk[A + Idx];end break;end end else do return;end end elseif ((3619>=1554) and (Enum<=36)) then if ((Enum==35) or (1145==2693)) then if ((504<=3935) and (Stk[Inst[2]]~=Stk[Inst[4]])) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((Inst[2]==Stk[Inst[4]]) or (1695<169)) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((Enum>37) or (2876<2570)) then local FlatIdent_39C0C=0;local A;while true do if ((FlatIdent_39C0C==0) or (1996>3833)) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1,Top));break;end end else local FlatIdent_2DD0=0;local A;local C;local CB;local Result;local R;while true do if ((402<3685) and (FlatIdent_2DD0==1)) then CB=A + 2;Result={Stk[A](Stk[A + 1],Stk[CB])};FlatIdent_2DD0=2;end if ((1298<2681) and (FlatIdent_2DD0==3)) then if (R or (1063>1661)) then local FlatIdent_6F446=0;while true do if ((FlatIdent_6F446==0) or (4837<=1341)) then Stk[CB]=R;VIP=Inst[3];break;end end else VIP=VIP + 1;end break;end if ((1553==1553) and (FlatIdent_2DD0==0)) then A=Inst[2];C=Inst[4];FlatIdent_2DD0=1;end if ((FlatIdent_2DD0==2) or (2532>=4444)) then for Idx=1,C do Stk[CB + Idx]=Result[Idx];end R=Result[1];FlatIdent_2DD0=3;end end end elseif ((Enum<=44) or (3748<=2081)) then if ((3738>=3608) and (Enum<=41)) then if ((1963<=3347) and (Enum<=39)) then Stk[Inst[2]]=Stk[Inst[3]];elseif ((4871>490) and (Enum==40)) then if ((4447>=1987) and (Stk[Inst[2]]==Stk[Inst[4]])) then VIP=VIP + 1;else VIP=Inst[3];end elseif (Stk[Inst[2]] or (3602<=972)) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((4769<=4949) and (Enum<=42)) then if ((Stk[Inst[2]]==Inst[4]) or (186>1553)) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((Enum>43) or (1161>2488)) then local FlatIdent_97FBA=0;local NewProto;local NewUvals;local Indexes;while true do if ((FlatIdent_97FBA==2) or (3521<264)) then for Idx=1,Inst[4] do local FlatIdent_1D633=0;local Mvm;while true do if ((FlatIdent_1D633==0) or (2176==200)) then local FlatIdent_41255=0;while true do if ((FlatIdent_41255==0) or (4254>4942)) then VIP=VIP + 1;Mvm=Instr[VIP];FlatIdent_41255=1;end if ((3587>3349) and (FlatIdent_41255==1)) then FlatIdent_1D633=1;break;end end end if ((1==FlatIdent_1D633) or (928>=938)) then if ((4677==4677) and (Mvm[1]==39)) then Indexes[Idx-1]={Stk,Mvm[3]};else Indexes[Idx-1]={Upvalues,Mvm[3]};end Lupvals[ #Lupvals + 1]=Indexes;break;end end end Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env);break;end if ((FlatIdent_97FBA==1) or (2449<1019)) then Indexes={};NewUvals=Setmetatable({},{__index=function(_,Key)local FlatIdent_26D2=0;local FlatIdent_37E87;local FlatIdent_93994;local Val;while true do if ((4139<=4683) and (FlatIdent_26D2==0)) then FlatIdent_37E87=0;FlatIdent_93994=nil;FlatIdent_26D2=1;end if ((FlatIdent_26D2==1) or (2040<=478)) then Val=nil;while true do if ((FlatIdent_37E87==1) or (1029>=2362)) then while true do if ((4848>=451) and (FlatIdent_93994==0)) then local FlatIdent_173C9=0;local FlatIdent_C690;while true do if ((FlatIdent_173C9==0) or (1282==1724)) then FlatIdent_C690=0;while true do if ((106<1323) and (FlatIdent_C690==0)) then local FlatIdent_7118F=0;while true do if ((FlatIdent_7118F==0) or (1416<947)) then Val=Indexes[Key];return Val[1][Val[2]];end end end end break;end end end end break;end if ((0==FlatIdent_37E87) or (2710==2025)) then local FlatIdent_2166=0;while true do if ((347<=4408) and (FlatIdent_2166==0)) then FlatIdent_93994=0;Val=nil;FlatIdent_2166=1;end if ((FlatIdent_2166==1) or (1414>=2238)) then FlatIdent_37E87=1;break;end end end end break;end end end,__newindex=function(_,Key,Value)local FlatIdent_7DED2=0;local Val;while true do if ((2668>=1349) and (FlatIdent_7DED2==0)) then Val=Indexes[Key];Val[1][Val[2]]=Value;break;end end end});FlatIdent_97FBA=2;end if ((FlatIdent_97FBA==0) or (2851<=2659)) then NewProto=Proto[Inst[3]];NewUvals=nil;FlatIdent_97FBA=1;end end else local FlatIdent_46088=0;local A;local Step;local Index;while true do if ((FlatIdent_46088==1) or (912<460)) then local FlatIdent_11AEF=0;while true do if ((FlatIdent_11AEF==1) or (3977<2263)) then FlatIdent_46088=2;break;end if ((FlatIdent_11AEF==0) or (4366>4581)) then Index=Stk[A] + Step;Stk[A]=Index;FlatIdent_11AEF=1;end end end if ((FlatIdent_46088==2) or (4386==4627)) then if ((4985==4985) and (Step>0)) then if ((2682==2682) and (Index<=Stk[A + 1])) then local FlatIdent_86B4A=0;local FlatIdent_2CDC7;local FlatIdent_50F4B;while true do if ((2312>1658) and (FlatIdent_86B4A==0)) then FlatIdent_2CDC7=0;FlatIdent_50F4B=nil;FlatIdent_86B4A=1;end if ((FlatIdent_86B4A==1) or (4942<=2092)) then while true do if ((1725<=4604) and (FlatIdent_2CDC7==0)) then FlatIdent_50F4B=0;while true do if ((FlatIdent_50F4B==0) or (1705>4713)) then VIP=Inst[3];Stk[A + 3]=Index;break;end end break;end end break;end end end elseif ((3965<=4060) and (Index>=Stk[A + 1])) then local FlatIdent_5A4C4=0;local FlatIdent_987A5;local FlatIdent_819C9;while true do if ((4750>=556) and (FlatIdent_5A4C4==1)) then while true do if ((3362<3905) and (FlatIdent_987A5==0)) then FlatIdent_819C9=0;while true do if ((FlatIdent_819C9==0) or (2449>=3374)) then VIP=Inst[3];Stk[A + 3]=Index;break;end end break;end end break;end if ((997<4753) and (FlatIdent_5A4C4==0)) then FlatIdent_987A5=0;FlatIdent_819C9=nil;FlatIdent_5A4C4=1;end end end break;end if ((2721>538) and (FlatIdent_46088==0)) then A=Inst[2];Step=Stk[A + 2];FlatIdent_46088=1;end end end elseif ((4842>=4545) and (Enum<=47)) then if ((Enum<=45) or (3909>4329)) then VIP=Inst[3];elseif ((Enum>46) or (3164==404)) then Stk[Inst[2]]=Stk[Inst[3]] * Inst[4];else local FlatIdent_2D0F7=0;local A;while true do if ((1375<=2841) and (0==FlatIdent_2D0F7)) then A=Inst[2];Stk[A](Unpack(Stk,A + 1,Inst[3]));break;end end end elseif ((907==907) and (Enum<=49)) then if ((Enum==48) or (2754==1331)) then Stk[Inst[2]][Inst[3]]=Stk[Inst[4]];else local FlatIdent_47665=0;local FlatIdent_16955;local FlatIdent_334A8;local A;local T;while true do if ((FlatIdent_47665==2) or (2803==3467)) then while true do if ((FlatIdent_16955==0) or (1471>4006)) then FlatIdent_334A8=0;A=nil;FlatIdent_16955=1;end if ((4198>=534) and (FlatIdent_16955==1)) then T=nil;while true do if ((434<=2152) and (FlatIdent_334A8==1)) then for Idx=A + 1,Inst[3] do Insert(T,Stk[Idx]);end break;end if ((0==FlatIdent_334A8) or (482>=4194)) then local FlatIdent_1441=0;local FlatIdent_1A19E;while true do if ((FlatIdent_1441==0) or (3617<=2759)) then FlatIdent_1A19E=0;while true do if ((4886>=1146) and (FlatIdent_1A19E==1)) then FlatIdent_334A8=1;break;end if ((3525>314) and (FlatIdent_1A19E==0)) then A=Inst[2];T=Stk[A];FlatIdent_1A19E=1;end end break;end end end end break;end end break;end if ((1466<1587) and (0==FlatIdent_47665)) then FlatIdent_16955=0;FlatIdent_334A8=nil;FlatIdent_47665=1;end if ((FlatIdent_47665==1) or (4961<=170)) then A=nil;T=nil;FlatIdent_47665=2;end end end elseif ((3267>=57) and (Enum==50)) then if ((142<=276) and (Inst[2]<Stk[Inst[4]])) then VIP=VIP + 1;else VIP=Inst[3];end else local FlatIdent_3D4B3=0;local A;local Results;local Limit;local Edx;while true do if ((FlatIdent_3D4B3==1) or (2720==935)) then local FlatIdent_33421=0;while true do if ((FlatIdent_33421==1) or (61>=2756)) then FlatIdent_3D4B3=2;break;end if ((1201<4509) and (0==FlatIdent_33421)) then Top=(Limit + A) -1;Edx=0;FlatIdent_33421=1;end end end if ((1510>163) and (FlatIdent_3D4B3==0)) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1,Top)));FlatIdent_3D4B3=1;end if ((FlatIdent_3D4B3==2) or (2952>4465)) then for Idx=A,Top do local FlatIdent_3293A=0;local FlatIdent_6993F;local FlatIdent_6C569;while true do if ((1488>=347) and (FlatIdent_3293A==1)) then while true do if ((0==FlatIdent_6993F) or (1326>1804)) then FlatIdent_6C569=0;while true do if ((2966==2966) and (FlatIdent_6C569==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end break;end if ((FlatIdent_3293A==0) or (3809<=3160)) then FlatIdent_6993F=0;FlatIdent_6C569=nil;FlatIdent_3293A=1;end end end break;end end end VIP=VIP + 1;break;end end break;end end end end;FlatIdent_515CE=3;end if (FlatIdent_515CE==0) then VIP=1;Top= -1;FlatIdent_515CE=1;end if (FlatIdent_515CE==3) then A,B=_R(PCall(Loop));if  not A[1] then local line=Chunk[4][VIP] or "?";error("Script error at ["   .. line   .. "]:"   .. A[2]);else return Unpack(A,2,B);end break;end end end;end if (FlatIdent_42091==0) then Instr=Chunk[1];Proto=Chunk[2];FlatIdent_42091=1;end end end return Wrap(Deserialize(),{},vmenv)(...);end;VMCalletFEnv(),...);break;end if (2==FlatIdent_60E04) then Concat=table.concat;Insert=table.insert;GetFEnv=getfenv or function()return _ENV;end;FlatIdent_60E04=3;end if (FlatIdent_60E04==1) then Sub=string.sub;Subg=string.gsub;Rep=string.rep;FlatIdent_60E04=2;end if (4==FlatIdent_60E04) then Unpack=unpack or table.unpack;ToNumber=tonumber;VMCall=nil;FlatIdent_60E04=5;end if (FlatIdent_60E04==0) then StrToNumber=tonumber;Byte=string.byte;Char=string.char;FlatIdent_60E04=1;end if (FlatIdent_60E04==3) then Setmetatable=setmetatable;PCall=pcall;Select=select;FlatIdent_60E04=4;end end end